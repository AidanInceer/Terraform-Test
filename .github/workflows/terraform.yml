name: Terraform

on:
  pull_request:
    branches: ["main", "develop"]

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5
          terraform_wrapper: false

      - name: GCP Auth
        id: auth
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform fmt
        id: format
        run: terraform fmt -check

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan  -out=tfplan
          terraform show tfplan

      - name: Save Artifact
        id: save-artifact
        uses: actions/upload-artifact@v3
        with:
          name: tf-plan
          path: ./tfplan

  Apply:
    runs-on: ubuntu-latest
    needs: Deploy
    if: github.event_name == 'pull_request'

    steps:
      - name: Wait for approval
        uses: octokit/request-action@v2.x
        id: approved
        with:
          route: GET /repos/:owner/:repo/pulls/:pull_number/reviews
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          pull_number: ${{ github.event.number }}
          reviewers: ${{ github.actor }}
          state: approved
          per_page: 100
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Apply Terraform Changes
        if: steps.approved.outputs.data != '[]'
        run: terraform apply --auto-approve

        # aas